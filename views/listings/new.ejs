<% layout("./layouts/boilerplate") %>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

<div class="container my-5">
  <h1 class="mb-4 text-center fw-bold text-primary">Create a New Stay Listing</h1>
  <p class="text-center text-muted mb-5">Fill in the details below to publish your property and attract tenants.</p>

  <form method="POST" class="needs-validation" novalidate action="/listings" enctype="multipart/form-data">
    <div class="row">
      <div class="col-lg-10 offset-lg-1">
        <div class="card shadow-lg border-0 rounded-4 p-4 p-md-5">

          <!-- Title -->
          <div class="mb-4">
            <label class="form-label fw-semibold">Title *</label>
            <input class="form-control form-control-lg" name="listing[title]" type="text" placeholder="Cozy 2BHK near Connaught Place" required>
            <div class="invalid-feedback">Please enter a title for your listing.</div>
          </div>

          <!-- Description -->
          <div class="mb-4">
            <label class="form-label fw-semibold">Description *</label>
            <textarea class="form-control" name="listing[description]" rows="4" placeholder="Describe your property, nearby landmarks, vibe..." required></textarea>
            <div class="invalid-feedback">Please provide a description.</div>
          </div>

          <!-- Images -->
          <div class="row g-3 mb-4">
            <div class="col-md-6">
              <label class="form-label fw-semibold">Featured Image *</label>
              <input class="form-control" name="listing[featuredImage]" type="file" accept="image/*" required>
              <div class="invalid-feedback">Upload a featured image.</div>
            </div>
            <div class="col-md-6">
              <label class="form-label fw-semibold">Additional Images</label>
              <input class="form-control" name="listing[images]" type="file" accept="image/*" multiple>
              <div class="form-text">Upload multiple images (Ctrl/Command + Click).</div>
            </div>
          </div>

          <!-- Price -->
          <div class="mb-4">
            <label class="form-label fw-semibold">Price (per day, ₹) *</label>
            <div class="input-group">
              <span class="input-group-text">₹</span>
              <input class="form-control" name="listing[price]" type="number" min="100" placeholder="1500" required>
            </div>
            <div class="invalid-feedback">Enter a valid price greater than ₹100.</div>
          </div>

          <!-- Location -->
          <div class="row g-3 mb-4">
            <div class="col-md-4">
              <label class="form-label fw-semibold">Country *</label>
              <input class="form-control" name="listing[country]" type="text" value="India" required>
            </div>
            <div class="col-md-4">
              <label class="form-label fw-semibold">City *</label>
              <input class="form-control" name="listing[city]" type="text" placeholder="Delhi, Mumbai..." required>
            </div>
            <div class="col-md-4">
              <label class="form-label fw-semibold">Pincode *</label>
              <input class="form-control" name="listing[pincode]" type="text" placeholder="110001" required pattern="\d{6}">
              <div class="invalid-feedback">Enter a valid 6-digit pincode.</div>
            </div>
            <div class="col-12">
              <label class="form-label fw-semibold">Locality / Area *</label>
              <input class="form-control" name="listing[area]" type="text" placeholder="Connaught Place, Bandra West..." required>
            </div>
          </div>

          <!-- Property & BHK -->
          <div class="row g-3 mb-4">
            <div class="col-md-6">
              <label class="form-label fw-semibold">Property Type *</label>
              <select class="form-select" name="listing[propertyType]" id="propertyType" required>
                <option value="">Select Property Type</option>
                <option value="Flat">Flat / Apartment</option>
                <option value="PG">PG / Paying Guest</option>
                <option value="Studio">Studio / 1RK</option>
              </select>
            </div>
            <div class="col-md-6" id="bhkContainer">
              <label class="form-label fw-semibold">BHK Type *</label>
              <select class="form-select" name="listing[bhkType]" id="bhkType">
                <option value="">Select BHK Type</option>
                <option value="1BHK">1BHK</option>
                <option value="2BHK">2BHK</option>
                <option value="3BHK">3BHK</option>
                <option value="More">More</option>
              </select>
            </div>
          </div>

          <!-- Bedrooms & Bathrooms -->
          <div class="row g-3 mb-4" id="bedBathContainer">
            <div class="col-md-6">
              <label class="form-label fw-semibold">Bedrooms *</label>
              <input class="form-control" type="number" name="listing[bedrooms]" id="bedroomsInput" min="1">
            </div>
            <div class="col-md-6">
              <label class="form-label fw-semibold">Bathrooms *</label>
              <input class="form-control" type="number" name="listing[bathrooms]" id="bathroomsInput" min="1">
            </div>
          </div>

          <!-- Amenities -->
          <div class="mb-4">
            <label class="form-label fw-semibold">Amenities</label>
            <div class="d-flex flex-wrap gap-3">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" name="listing[amenities][]" value="WiFi">
                <label class="form-check-label">WiFi</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="checkbox" name="listing[amenities][]" value="AC">
                <label class="form-check-label">AC</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="checkbox" name="listing[amenities][]" value="Parking">
                <label class="form-check-label">Parking</label>
              </div>
            </div>
          </div>

          <!-- Additional Info -->
          <div class="mb-4">
            <label class="form-label fw-semibold">House Rules / Additional Info</label>
            <textarea class="form-control" name="listing[additionalInfo]" rows="3" placeholder="No pets, No smoking, Family-friendly"></textarea>
          </div>

          <!-- Maps -->
          <div class="mb-4">
            <label class="form-label fw-semibold">Property Location *</label>
            <input class="form-control mb-2" id="locationInput" type="text" placeholder="Search for your property location...">
            <div id="map" style="width: 100%; height: 400px; border-radius:0.5rem;"></div>
            <input type="hidden" name="listing[latitude]" id="latitude" required>
            <input type="hidden" name="listing[longitude]" id="longitude">
            <div class="invalid-feedback">Please select a location on the map.</div>
          </div>

          <!-- Submit -->
          <div class="text-center mt-4">
            <button class="btn btn-primary btn-lg rounded-pill px-5 shadow-sm" type="submit">
              <i class="fa-solid fa-paper-plane me-2"></i> Submit Listing
            </button>
          </div>

        </div>
      </div>
    </div>
  </form>
</div>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>

<script>
  // Property & BHK logic
  const propertyType = document.getElementById('propertyType');
  const bhkContainer = document.getElementById('bhkContainer');
  const bhkType = document.getElementById('bhkType');
  const bedBathContainer = document.getElementById('bedBathContainer');
  const bedroomsInput = document.getElementById('bedroomsInput');
  const bathroomsInput = document.getElementById('bathroomsInput');

  function toggleFields() {
    const type = propertyType.value;
    if(type === "Flat") {
      bhkContainer.style.display = "block";
      bhkType.required = true;
      bedBathContainer.style.display = "flex";
      bhkType.dispatchEvent(new Event('change'));
    } else {
      bhkContainer.style.display = "none";
      bhkType.required = false;
      bedBathContainer.style.display = "none";
      bedroomsInput.value = "";
      bathroomsInput.value = "";
      bedroomsInput.readOnly = false;
      bathroomsInput.readOnly = false;
    }
  }

  bhkType.addEventListener('change', () => {
    switch(bhkType.value) {
      case "1BHK": bedroomsInput.value=1; bathroomsInput.value=1; break;
      case "2BHK": bedroomsInput.value=2; bathroomsInput.value=2; break;
      case "3BHK": bedroomsInput.value=3; bathroomsInput.value=3; break;
      default: bedroomsInput.value=""; bathroomsInput.value="";
    }
    bedroomsInput.readOnly = bathroomsInput.readOnly = ["1BHK","2BHK","3BHK"].includes(bhkType.value);
  });

  propertyType.addEventListener('change', toggleFields);
  window.addEventListener('load', toggleFields);
</script>

<script>
(async () => {
  const apiKey = await (await fetch('/api/geoapify-key')).json().then(d => d.apiKey);

  // Fix for Leaflet marker icons
  delete L.Icon.Default.prototype._getIconUrl;
  L.Icon.Default.mergeOptions({
    iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',
    iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',
    shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',
  });

  // Initialize the map
  const map = L.map('map').setView([20.5937, 78.9629], 5); // Centered on India by default
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; OpenStreetMap contributors'
  }).addTo(map);

  let marker;
  const latInput = document.getElementById('latitude');
  const lonInput = document.getElementById('longitude');
  const input = document.getElementById('locationInput');

  // Function to place/update marker
  function setMarker(lat, lon, popupText = "Selected Location") {
    if (marker) map.removeLayer(marker);
    marker = L.marker([lat, lon], { draggable: true })
      .addTo(map)
      .bindPopup(popupText)
      .openPopup();
    latInput.value = lat;
    lonInput.value = lon;
    map.setView([lat, lon], 17);

    // Update lat/lon when marker is dragged
    marker.on('dragend', e => {
      const pos = e.target.getLatLng();
      latInput.value = pos.lat;
      lonInput.value = pos.lng;
    });
  }

  // Use Leaflet’s built-in geolocation
  map.locate({ setView: true, maxZoom: 17, enableHighAccuracy: true });

  // When location is found
  map.on('locationfound', e => {
    setMarker(e.latitude, e.longitude, "You are here");
  });

  // When location access is denied or fails
  map.on('locationerror', e => {
    console.warn("Location not found:", e.message);
    // Fallback: approximate location from IP
    fetch('https://ipapi.co/json/')
      .then(r => r.json())
      .then(data => setMarker(data.latitude, data.longitude, "Approximate Location"))
      .catch(() => console.warn("IP fallback failed"));
  });

  // Geoapify autocomplete for location search
  let timer;
  input.addEventListener('input', e => {
    clearTimeout(timer);
    if (!e.target.value) return;
    timer = setTimeout(async () => {
      try {
        const res = await fetch(`https://api.geoapify.com/v1/geocode/autocomplete?text=${encodeURIComponent(e.target.value)}&limit=5&apiKey=${apiKey}`);
        const features = (await res.json()).features;
        if (features.length > 0) {
          const [lon, lat] = features[0].geometry.coordinates;
          setMarker(lat, lon, features[0].properties.formatted);
        }
      } catch (err) {
        console.error(err);
      }
    }, 300);
  });
})();
</script>


<style>
.card {
  background: #fff;
  border-radius: 1.25rem;
  padding: 2rem;
  box-shadow: 0 10px 25px rgba(0,0,0,0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.card:hover { transform: translateY(-3px); box-shadow: 0 15px 30px rgba(0,0,0,0.15); }

.form-control, .form-select {
  border-radius: 0.75rem;
  padding: 0.75rem 1rem;
  border: 1px solid #dee2e6;
  transition: all 0.3s ease;
}
.form-control:focus, .form-select:focus {
  border-color: #0d6efd;
  box-shadow: 0 0 0 0.25rem rgba(13,110,253,.2);
}

.form-label { color:#333; font-weight:600; margin-bottom:0.5rem; }

.btn-primary {
  background: linear-gradient(135deg,#156ef3,#2f85ff);
  border:none; font-weight:600; padding:0.75rem 2rem; transition: all 0.3s ease;
}
.btn-primary:hover { transform: translateY(-2px); box-shadow:0 8px 20px rgba(21,110,243,0.4); }

#map { width:100%; height:400px; border-radius:0.75rem; border:1px solid #dee2e6; margin-top:0.5rem; }

.mb-4 { margin-bottom:1.75rem !important; }
.mb-5 { margin-bottom:2.5rem !important; }

.d-flex.flex-wrap.gap-3 .form-check { min-width:120px; flex:1; }
</style>
